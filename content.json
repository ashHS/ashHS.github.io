{"meta":{"title":"爱耿耿的H君","subtitle":null,"description":null,"author":"H君","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"关于在html中换行引起的空格问题","slug":"关于在html中换行引起的空格问题","date":"2019-06-12T06:52:07.000Z","updated":"2019-06-12T06:55:44.102Z","comments":true,"path":"2019/06/12/关于在html中换行引起的空格问题/","link":"","permalink":"http://yoursite.com/2019/06/12/关于在html中换行引起的空格问题/","excerpt":"","text":"我在最近写html的时候，经常会碰到标签的换行，或者是内容的换行，在界面中是会出现空格的间隙。如： 1234&lt;div&gt; &lt;span&gt;111&lt;/span&gt; &lt;span&gt;222&lt;/span&gt;&lt;/div&gt; 如图，111与222之间会出现空格。解决方法：在父标签上设置font-size：0px; 然后单独给子标签设置字体大小就能解决这个问题了。 1234&lt;div style=&quot;font-size: 0px;&quot;&gt; &lt;span style=&quot;font-size: 20px;&quot;&gt;111&lt;/span&gt; &lt;span style=&quot;font-size: 20px;&quot;&gt;222&lt;/span&gt;&lt;/div&gt; 效果：","categories":[],"tags":[]},{"title":"text-algin:center使文字居中在某些浏览器无效的情况","slug":"text-algin-center使文字居中在某些浏览器无效的情况","date":"2019-06-12T06:51:49.000Z","updated":"2019-06-12T06:57:45.188Z","comments":true,"path":"2019/06/12/text-algin-center使文字居中在某些浏览器无效的情况/","link":"","permalink":"http://yoursite.com/2019/06/12/text-algin-center使文字居中在某些浏览器无效的情况/","excerpt":"","text":"最近在写东西时遇到了需要把一个select标签里的文字居中表示的情况，于是就加了text-align:center的样式，但是这样在火狐浏览器里是正常居中的，但是在谷歌浏览器中去无效。在搜索了半天后发现将select的样式里添加一条text-align-last: center;就可以解决这个问题。 1234567select &#123;text-align: center;text-align-last: center;&#125;","categories":[],"tags":[]},{"title":"前端性能优化之浏览器","slug":"前端性能优化之浏览器","date":"2019-06-12T06:35:09.000Z","updated":"2019-06-12T06:46:54.684Z","comments":true,"path":"2019/06/12/前端性能优化之浏览器/","link":"","permalink":"http://yoursite.com/2019/06/12/前端性能优化之浏览器/","excerpt":"","text":"1、把CSS放在HEAD中加载能让页面更早的开始渲染，避免闪屏最好能包含关键渲染路径的样式：首屏 2、把JS放在BODY末尾加载因为JS阻塞HTML解析和CSS渲染 3、不使用CSS表达式看似强大，实际性能开销很大，可能导致页面卡顿 4、用外链的方式引用CSS和JS有效减少HTML的体积可合理利用浏览器缓存 5、压缩JS和CSS生产环境删除不必要的注释、空白JS中变量名压缩、混淆压缩 6、不重复加载JS在IE中还是会多个请求，不能发挥缓存优势意味着更长的JS执行时间 7、让AJAX请求可缓存（服务器端）GZIP、内容压缩都可适用 8、用GET方式发起AJAX请求GET方式可缓存如果是获取信息，GET更语义化 9、组件延迟加载保障关键页面资源优先加载：因为并发数限制延迟加载的典型手段：Lazyload 10、减少DOM节点数天猫：更多节点数使浏览器布局、渲染时计算量更大 11、避免使用iframe会阻塞父文档的onload即使是空白也比较耗时 12、减少COOKIE体积因为COOKIE每次请求都会全部带上 13、减少JS中的DOM访问对于查找到的元素，缓存在变量中节点增加是合理利用DocumentFragment不要用JS频繁的修改样式 14、使用常见的图片优化手段相比代码，图片体积更大PNGCrush、JPEGTRAN、PNGQUANT渐进式编码：JPG 15、不要在HTML中缩放图片徒增渲染开销，提供适合大小即可 16、不要把图片SRC置空IE、Chrome、FireFox会发起额外的主文档请求 17、任何资源尽量在25k以内iPhone无法缓存25k以上的资源","categories":[],"tags":[]},{"title":"HTTP相关知识","slug":"HTTP相关知识","date":"2019-06-12T06:34:24.000Z","updated":"2019-06-12T06:39:02.715Z","comments":true,"path":"2019/06/12/HTTP相关知识/","link":"","permalink":"http://yoursite.com/2019/06/12/HTTP相关知识/","excerpt":"","text":"一、什么是HTTP协议 HTTP协议（HyperText Transfer Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。HTTP是一个基于TCP/IP通信协议来传递数据。 二、HTTP协议的特点1、HTTP协议是无状态的2、多次HTTP请求3、基于TCP协议三、HTTP请求方法请求方法是客户端用来告知服务器其动作意图的方法。就像下达命令一样。 1、GET：获取资源2、POST：传输实体主体3、PUT：传输文件4、HEAD：获得报文首部5、DELETE：删除文件6、OPTIONS：询问支持的方法7、TRACE：追踪路径8、CONNECT：要求用隧道协议连接代理四、HTTP的响应状态码状态码是用来告知客户端服务器端处理请求的结果。凭借状态码用户可以知道服务器是请求处理成功、失败或者是被转发；这样出现了错误也好定位。状态码是由3位数字加原因短语组成。3位数字中的第一位是用来指定状态的类别。共有5种。 类别 原因短语 1XX 信息性状态码 接收的请求正在处理 2XX 成功状态码 请求正常处理完毕 3XX 重定向状态码 需要进行附加操作以完成请求 4XX 客户端错误状态码 服务器无法处理请求 5XX 服务器错误状态码 服务器处理请求出错 下面列举几个常用的状态码：1：==200：OK==这个代表处理成功。 2：==302：Found==代表临时重定向。该状态码表示请求的资源已经被分配了新的URL，但是和301的区别是302代表的不是永久性的移动，只是临时的。就是说这个URL还可能会发生改变。如果保存成书签了也不会更新。 3：==400：Bad Request==400表示请求报文中存在语法错误，需要修改后再次发送。 4：==403：Forbidden==表明请求发访问被拒绝了。没有获得服务器的访问权限，IP被禁止等。 5：==404：Not Found==表明请求的资源在服务器上找不到。也可以在服务器拒绝请求且不想说明理由时使用。 6：==500：Internal Server Error==表明服务器端在执行请求时发生了错误，很有可能是服务端程序的Bug或者临时故障。 7：==503：Service Unavailable==表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上状况需要的时间，最好写入Retry-After字段再返回给客户端。 8：==504：Getaway Timeout==网关超时，是代理服务器等待应用服务器响应时的超时，和408 Request Timeout的却别就是504是服务器的原因而不是客户端的原因。 HTTPS和HTTP的区别主要如下：1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。 3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。 4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。 输入完网址按下回车，到看到网页这个过程中发生了什么？？a. 域名解析b. 发起TCP的3次握手c. 建立TCP连接后发起http请求d. 服务器端响应http请求，浏览器得到html代码e. 浏览器解析html代码，并请求html代码中的资源f. 浏览器对页面进行渲染呈现给用户","categories":[],"tags":[]},{"title":"MVC模式与MVVM模式","slug":"MVC模式与MVVM模式","date":"2019-06-12T03:13:37.000Z","updated":"2019-06-12T06:00:38.616Z","comments":true,"path":"2019/06/12/MVC模式与MVVM模式/","link":"","permalink":"http://yoursite.com/2019/06/12/MVC模式与MVVM模式/","excerpt":"","text":"一、MVCMVC即模型(Model)、视图(View)、控制器(Controller) MVC允许在不改变视图的情况下改变视图对用户输入的响应方式，用户对View的操作交给了Controller处理，在Controller中响应View的事件调用Model的接口对数据进行操作，一旦Model发生变化便通知相关视图进行更新。Controller可以直接操作View，可以直接向Modal请求数据，而Modal与View相互之间不能通信。 其中： 1.Modal和View永远不能相互通信，只能通过Controller传递。 2.Controller可以直接与Modal对话(读写调用Modal)，Modal通过Notification和KVO机制与Controller间接通信。 3.Controller可以直接与View对话，通过outlet直接操作View，outlet直接对应到View中的控件，View通过action向Controller报告事件的发生(如用户Touch)。Controller是View的代理，以同步View和Controller。 如果前端没有框架，只使用原生的html+js，MVC模式可以这样理解。将html看成view;js看成controller，负责处理用户与应用的交互，响应对view的操作（对事件的监听），调用Model对数据进行操作，完成model与view的同步（根据model的改变，通过选择器对view进行操作）;将js的ajax当做Model，也就是数据层，通过ajax从服务器获取数据。 二、MVVMMVVM：模型(Model) 、视图(View)、视图模型(ViewModel) MVVM是一个MVC的增强版，正式连接了视图和控制器，并将表示逻辑从Controller移出放到一个新的对象里，即ViewModal。它实现了View和Modal的自动同步，即当Modal的属性改变时，我们不用再自己手动操作Dom元素来改变View的显示，而是改变属性后该属性对应的View层显示会自动改变。 &nbsp; &nbsp; &nbsp; 在Vue中，其HTML部分相当于View层，data相当于Modal层，而ViewModal层的核心是Vue中的双向数据绑定，即Modal变化时View可以实时更新，View变化也能让Modal发生变化。 整体看来，MVVM比MVC精简的多，不仅简化了业务与界面的依赖，还解决了数据频繁更新的问题，不用再用选择器操作DOM元素。因为在MVVM中，View不知道Modal的存在，Modal和View Modal也观察不到View，这种低耦合模式提高代码的可复用性。","categories":[],"tags":[]},{"title":"在vue-li+webpack项目中使用bootstrap","slug":"在vue-li-webpack项目中使用bootstrap","date":"2019-06-12T03:02:25.000Z","updated":"2019-06-12T03:11:27.089Z","comments":true,"path":"2019/06/12/在vue-li-webpack项目中使用bootstrap/","link":"","permalink":"http://yoursite.com/2019/06/12/在vue-li-webpack项目中使用bootstrap/","excerpt":"","text":"首先新建一个webpack项目新建项目： 1vue init webpack mybootstrap 安装组件： 1cnpm install 安装jQuery因为bootstrap是依赖于jQuery的，所以要先装上jQuery。 1cnpm install jquery@2.1.1 -D 可通过 1npm view jquery version 查看jquery版本信息。 下载bootstrap下载bootstrap包：https://v3.bootcss.com/然后将下载下来的bootstrap包放到/src/assets文件夹下。 配置jQuery在webpack.base.conf.js中添加 1const webpack = require(&apos;webpack&apos;) 接着在整个配置对象的末尾加上： 1234567plugins: [ new webpack.ProvidePlugin(&#123; $: &quot;jquery&quot;, jQuery: &quot;jquery&quot;, &quot;windows.jQuery&quot;: &quot;jquery&quot; &#125;) ] 引用bootstrap 在src/main.js文件的顶部加入对bootstrap的引用 12import &apos;./assets/css/bootstrap.min.css&apos;import &apos;./assets/js/bootstrap.min 到此为止bootstrap就引入完成了。","categories":[],"tags":[]},{"title":"Git的使用--将本地项目上传或更新到Github","slug":"Git的使用-将本地项目上传或更新到Github","date":"2019-06-12T02:15:05.000Z","updated":"2019-06-12T06:05:43.817Z","comments":true,"path":"2019/06/12/Git的使用-将本地项目上传或更新到Github/","link":"","permalink":"http://yoursite.com/2019/06/12/Git的使用-将本地项目上传或更新到Github/","excerpt":"","text":"一、使用git需要先下载git工具，下载地址：https://git-for-windows.github.io/二、接着进入GitHub首页，点击new repository新建一个库然后填写相应信息点击创建即可。创建好库之后点击Clone or download会出现一个地址，copy备用。三、 由于本地git仓库和GitHub仓库之间的传输是通过SSH加密的，所以连接时需要先设置一下：1.创建SSH KEY。通过下面的命令创建： 1$ssh-keygen -t rsa -C &quot;youremail@simple.com&quot; 然后回车。如果创建成功会在用户文件夹下的.ssh目录里找到id_rsa和id_rsa.pub这两个文件2.登录GitHub，右上角打开点击Settings，接着选择SSH and GPG KEYS,点击右上角的new ssh key,然后title里面随便填，再把id_rsa.pub的内容复制到title下面的Key内容框里，最后点击Add SSH Key,这样就完成了SSH Key的加密。四、在要上传的文件夹中打开git bash命令行窗口，通过命令 1git init 把这个文件夹变成git可管理的仓库。这时文件夹中会多了一个.git文件，他是用来跟踪和管理版本库的。五、通过 1git add . 把项目添加到仓库上，并且可以用git status查看状态。六、用 1git commit -m 把项目提交到仓库。-m 后的引号里是本次提交的注释。七、用 1git remote add origin https://github.com/ashHS/vue-shopping.git 来关联仓库。origin后面是GitHub上创建好的仓库的地址(上面的步骤copy的地址)。八、由于新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并： 1git pull --rebase origin master 此时文件夹中就会出现README.md这个文件。九、现在我们就可以把本地库的内容推送到GitHub上了，输入 1git push -u origin master 如果是第一次上传需要加-u，下次再上传时，只需要输入 1git push origin master 就可以了。这时候再刷新GitHub我们创建的仓库的页面，就会发现项目已经上传成功了。","categories":[],"tags":[]},{"title":"什么是scss，怎么在一个VUE项目中使用scss","slug":"什么是scss，怎么在一个VUE项目中使用scss","date":"2019-06-09T03:27:11.000Z","updated":"2019-06-12T06:08:10.999Z","comments":true,"path":"2019/06/09/什么是scss，怎么在一个VUE项目中使用scss/","link":"","permalink":"http://yoursite.com/2019/06/09/什么是scss，怎么在一个VUE项目中使用scss/","excerpt":"","text":"首先什么是scss呢？scss是一种css预处理语言，是一个css的扩展，它在css语法的基础上，允许您使用变量，嵌套规则，混合，导入，继承等功能，使得css更加强大和优雅，而且其完全兼容css3。 scss与sass的区别：scss仅在css3的基础上进行扩展，这意味着每个css样式表是一个同等的scss文件。此外，scss也支持大多数css hacks写法以及浏览器专属前缀语法。这种语法的样式表文件需要以.scss作为拓展名而sass，被称为缩进语法，它提供了一种更加简便的方式来书写css。它使用缩进而不是花括号来表示选择器的嵌套，用换行而不是分号来分隔属性。使用此语法的样式表文件需要以.sass作为扩展名。 在VUE项目中安装scss 安装sass依赖包，打开命令行输入：2.安装完依赖后，在webpack.config.js的rules里面添加配置3.在使用scss的时候在所在的style样式标签上添加lang=”scss”即可。4.scss使用测试：使用变量来设置div的背景颜色","categories":[],"tags":[]},{"title":"cookie、localStorage与sessionStorage","slug":"你好-Hexo","date":"2019-06-09T03:12:05.000Z","updated":"2019-06-09T03:21:16.846Z","comments":true,"path":"2019/06/09/你好-Hexo/","link":"","permalink":"http://yoursite.com/2019/06/09/你好-Hexo/","excerpt":"","text":"cookie、localStorage与sessionStorage都是客户端存储的解决方案。 1.localStorage与sessionStorage的共享性对于不同的浏览器来说，不能共享localStorage或sessionStorage中的信息。相同浏览器的不同窗口间可以共享相同localStorage，前提是页面属于相同的域名和端口。不同的页面或标签无法共享sessionStorage的信息。 2.cookiecookie的主要内容包括：名字、值、过期时间、路径和域。路径和玉一起构成cookie的作用范围。如果不设置过期时间，关闭浏览器cookie就会消失，这种称为回话cookie。 三者的区别共同点：三者都是保存在浏览器端，并且是同源的(URL协议、端口、主机名是相同的，只要有一个不同就是不同源)不同点：1.cookie数据始终在同源的http请求中携带(即使不需要)，即cookie在浏览器和服务器之间来回传递，而sessionStorage和localStorage不会自动把数据发送给服务器，仅在本地保存。cookie数据还有路径的概念，可以限制cookie只属于某个路径下。2.存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据。session Storage和localStorage限制的大小为5M或更大。3.数据有效期不同，sessionStorage仅仅在当前浏览器窗口关闭之前有效；localStorage始终有效，窗口或者浏览器关闭之后也一直保存，因此作用持久数据；cookie只在设置的有效时间之前有效，即使关闭窗口或浏览器。4.web Storage支持事件通知机制，可以将数据更新的通知发送给监听者。5.web Storage的api接口使用更方便。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-06-09T02:53:25.734Z","updated":"2019-06-09T02:53:25.734Z","comments":true,"path":"2019/06/09/hello-world/","link":"","permalink":"http://yoursite.com/2019/06/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}